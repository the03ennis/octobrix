version: '2.4'

services:

  # database for filament_manager plugin (comment if not needed, you may also remove this plugin from printers dockerfiles)
  #db:
  #  image: postgres
  #  volumes:
  #    - db-data:/var/lib/postgresql/data
  #  networks:
  #    net:
  #      ipv4_address: 172.18.0.2
  #  restart: always
  #  stdin_open: true
  #  tty: true
  #  environment:
  #    POSTGRES_USER: octoprint
  #    POSTGRES_PASSWORD: octoprint
  #    POSTGRES_DB: octoprint_filamentmanager
  #  ports:
  #    - 5432:5432

  # database administrator on port 4000 for filament_manager (comment if not needed)
  #dbadmin:
  #  image: adminer
  #  stdin_open: true
  #  tty: true
  #  environment:
  #    - ADMINER_DESIGN='nette'
  #    - ADMINER_DEFAULT_SERVER=db
  #  networks:
  #    net:
  #      ipv4_address: 172.18.0.3    
  #  restart: always
  #  ports:
  #    - 4000:8080

  # printer #1 on port 3001: cthulu
  prusai3-00:
    stdin_open: true
    tty: true
    build: octoprint/prusai3
    image: octoprint/prusai3
    volumes:
      - prusai3-00-data:/octoprint
    devices:
      - /dev/printer1:/dev/ttyUSB
     # - /dev/hub02_cam:/dev/video0
    environment:
      - ENABLE_MJPG_STREAMER=false
     # - MJPG_STREAMER_INPUT=-n -f 30 -r 640x480
    networks:
      net:
        ipv4_address: 172.18.0.11
    restart: always
    ports:
      - 3001:80

  # printer #2 on port 3002: oswald
  prusai3-01:
    build: octoprint/prusai3
    image: octoprint/prusai3
    stdin_open: true
    tty: true
    volumes:
      - prusai3-01-data:/octoprint
    devices:
      - /dev/printer0:/dev/ttyUSB
     # - /dev/hub04_cam:/dev/video0
    environment:
      - ENABLE_MJPG_STREAMER=false
     # - MJPG_STREAMER_INPUT=-n -f 30 -r 640x480
    networks:
      net:
        ipv4_address: 172.18.0.12
    restart: always
    ports:
      - 3002:80
    
  mongodb:
    image: mongo:4.4
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: suff
      MONGO_INITDB_ROOT_PASSWORD: 1833
      MONGO_INITDB_DATABASE: octofarm
    ports:
     # HOST:CONTAINER
    - 27017:27017
    volumes:
    # Local volume (change to mongodb-data for a named volume folder)
    - ./mongodb-data:/data/db
    restart: always

  octofarm:
    container_name: octofarm
    # choose octofarm/octofarm:latest or octofarm/octofarm:alpine-latest    
    image: octofarm/octofarm:latest
    restart: always
    mem_limit: 1000m # Feel free to adjust! 400 MB is quite high and a safety limit.
    ports:
    - 80:4000 # port of SYSTEM : port of CONTAINER
    environment:
    - MONGO=mongodb://suff:1833@mongodb:27017/octofarm?authSource=admin
    volumes:
    # Volumes as local relative folders (validate with 'docker-compose config')
    - ./OctoFarm/logs:/app/logs
    - ./OctoFarm/scripts:/app/scripts
    - ./OctoFarm/images:/app/images
 


networks:
  net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24
          gateway: 172.18.0.1

volumes:
  #db-data:
  #  driver: local
  prusai3-00-data:
    driver: local
  prusai3-01-data:
    driver: local
    
